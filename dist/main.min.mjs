import{hostname as e,networkInterfaces as t}from"os";const o={pallete(){const e=(e,t)=>{console.log(`${t}â–ˆâ–ˆâ–ˆâ–ˆ ${e}`)};for(const t in this.text)if(Object.hasOwnProperty.call(this.text,t)){e(t,this.text[t])}},reset:"[0m",modify:{bold:"[1m",dim:"[2m",italic:"[3m",underscore:"[4m",blink:"[5m",reverse:"[7m",hidden:"[8m",strikethrough:"[9m"},text:{black:"[30m",red:"[31m",green:"[32m",yellow:"[33m",blue:"[34m",magenta:"[35m",cyan:"[36m",white:"[37m"},block:{black:"[40m",red:"[41m",green:"[42m",yellow:"[43m",blue:"[44m",magenta:"[45m",cyan:"[46m",white:"[47m"}},r={heading:[o.modify.bold,o.text.white,o.modify.dim,o.modify.underscore],main:[o.modify.bold,o.text.yellow],text:[o.text.cyan],notice:[o.modify.dim]},n={heading:[o.modify.hidden],main:[],text:[o.text.blue],notice:[o.modify.hidden]},i={heading:[o.text.green,o.modify.dim],main:[o.text.green],text:[o.text.magenta]},m={heading:[o.text.green,o.modify.underscore],main:[o.text.green,o.modify.bold],text:[o.text.red]},d={heading:[o.text.magenta,o.modify.dim,o.modify.underscore],main:[o.text.magenta],text:[o.text.yellow,o.modify.dim]},a={heading:[o.text.white,o.modify.dim],main:[o.text.white,o.modify.underscore],text:[o.text.blue]};var s=Object.freeze({__proto__:null,Default:r,minimal:n,spring:i,summer:m,autumn:d,winter:a});const l={heading:`[{{time}}] {{dir}}${o.reset} ðŸ¤–`,main:"{{environment}} Environment served to:",text:["Local:\t\t{{local}}","On your network:\t{{ip}}","Or via hostname:\t{{hostname}}"],notice:"To follow the links, double-click or [Cmd]-click on MacOs."},c=({PORT:n,userTheme:i,isSecure:m=!1,userText:d})=>{if(void 0===n||NaN===n)throw new TypeError(`${n} is not a Number. Expected a value of type Number for 'PORT'.`);const a="production"===process.env.NODE_ENV?"Production":"Development",s={...r,...i,get(e){return Array.isArray(this[e])?this[e].join(""):this[e]}},c={...l,...d,get(e,t){const o={environment:a,local:x({error:!1,string:"localhost"}),ip:x(h),hostname:x(g),port:n,cwd:process.cwd(),dir:process.cwd().split("/").pop(),time:(new Date).toLocaleTimeString()};return(void 0===t?this[e]:this[e][t]).replace(/\{{2}[^\{\}]*\}{2}/gim,(e=>o[e.replace("{{","").replace("}}","")]))}},h=(()=>{const{eth0:e,en0:o}=t();if(void 0===e&&void 0===o)return console.warn("DSD: No local Network Interface could be found."),{error:!0,address:"No network address exposed."};const r=e||o,{address:n}=r.find((e=>"IPv4"===e.family||4===e.family));return{error:!1,string:n}})(),g={error:h.error,string:h.error?h.address:e()},x=e=>e.error?"No network address exposed.":`http${m?"s":""}://${e.string}:${o.modify.bold}${n}`,f=e=>`${s.get(e)}${c.get(e)}${o.reset}`;console.log(`\n${f("heading")}\n${f("main")}\n\n${c.text.map(((e,t)=>`  ${s.get("text")}${c.get("text",t)}${o.reset}`)).join("\n")}\n\n${f("notice")}\n`)};export{o as colours,c as presentDetails,s as themes};
